AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Description: CUP AWS Serverless Arch. for Email

Parameters:
  KMSKeyID:
    Type: String
    NoEcho: true
    Default: CHANGE_ME

  SNSTopicARN:
    Type: String

  DLS_ACCOUNT_ID:
    Type: String
  
  STATIC_ASSETS_BASEPATH:
    Type: String

  APPS_BASEPATH:
    Type: String
  
  FROM_EMAIL_ADDRESS:
    Type: String

  IELTS_BUNDLE_CODE:
    Type: String
  
Resources:
  DeadLetterQueueForSubscription:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Join ["-", [!Ref AWS::StackName, deadLetterQueueForSubscription]]
      DelaySeconds: 0
      VisibilityTimeout: 300
      MessageRetentionPeriod: 1209600 #14 days in seconds
        
  IELTSubscription:
    Type: "AWS::SNS::Subscription"
    DependsOn: [DeadLetterQueueForSubscription]
    Properties:
      TopicArn: !Ref SNSTopicARN
      Endpoint: !GetAtt QueueForFeedbackEmail.Arn
      Protocol: "sqs"
      RawMessageDelivery: "true"
      FilterPolicy: 
        bundle-codes:
          - !Ref IELTS_BUNDLE_CODE
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetterQueueForSubscription.Arn

  DeadLetterQueueForFeedbackEmail:
    Type: "AWS::SQS::Queue"
    Properties:
      QueueName: !Join ["-", [!Ref AWS::StackName, deadLetterQueueForFeedbackEmail]]
      DelaySeconds: 0
      VisibilityTimeout: 300
      MessageRetentionPeriod: 1209600 #14 days in seconds

  QueueForFeedbackEmail:
    Type: AWS::SQS::Queue
    DependsOn: [DeadLetterQueueForFeedbackEmail]
    Properties:
      QueueName: !Join ["-", [!Ref AWS::StackName, queueForFeedbackEmail]]
      VisibilityTimeout: 180
      ReceiveMessageWaitTimeSeconds: 20 #20 is the max value, for long polling
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetterQueueForFeedbackEmail.Arn
        maxReceiveCount: 5

  SendEmailFunction:
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: !Join ["-", [!Ref AWS::StackName, SendEmailFunction]]
      Handler: index.handler
      Runtime: nodejs14.x
      CodeUri: functions/send-email
      Description: Function Triggered on new entry in QueueForFeedbackEmail
      MemorySize: 512
      Timeout: 90
      Role: !GetAtt SendEmailRole.Arn
      Environment:
        Variables:
          EMAIL_Q_URL: !Ref QueueForFeedbackEmail.Arn
          ACCOUNT_ID: !Ref DLS_ACCOUNT_ID
          STATIC_ASSETS_BASEPATH: !Ref STATIC_ASSETS_BASEPATH
          APPS_BASEPATH: !Ref APPS_BASEPATH
          EMAIL_ADDRESS_GENERAL: !Ref FROM_EMAIL_ADDRESS
          IELTS_BUNDLE_CODE: !Ref IELTS_BUNDLE_CODE
      KmsKeyArn: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KMSKeyID}"
      Events:
        QueueForFeedbackEmailEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt QueueForFeedbackEmail.Arn
            BatchSize: 10

  SendEmailRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "sts:AssumeRole"
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSLambdaExecute
      Policies:
        - PolicyName: SendMail
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ses:SendTemplatedEmail"
                Resource:
                  - "*"
        - PolicyName: DeleteMessageFromQueue
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sqs:DeleteMessage"
                Resource:
                  - !GetAtt QueueForFeedbackEmail.Arn

Outputs:
  QueueForFeedbackEmail:
    Description: "Queue for applying filter on SNS"
    Value: !Ref QueueForFeedbackEmail
  SendEmailFunction:
    Description: "Triggered on new entry in QueueForFeedbackEmail Lambda Function ARN"
    Value: !GetAtt SendEmailFunction.Arn
  IELTSubscription:
    Description: "Triggered on new entry in QueueForFeedbackEmail Lambda Function ARN"
    Value: !GetAtt SendEmailFunction.Arn
  SendEmailRole:
    Description: "Role for SendEmail Lambda Execution ARN"
    Value: !GetAtt SendEmailRole.Arn